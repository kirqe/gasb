version: '3'
services:
  db:
    image: postgres
    restart: always
    volumes:
      - ./tmp/db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    env_file:
      - .env

  app: &app_base
    tty: true
    stdin_open: true
    build:
      context: .      
      dockerfile: ./docker/app/Dockerfile    
    volumes:
      - .:/var/www/app
    environment:  
      REDIS_URL: ${REDIS_URL}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      RACK_SECRET: ${RACK_SECRET}
      VIRTUAL_HOST: "gasb.app"
    ports:
      - "9292:9292"
    env_file:
      - .env    

  sidekiq:
    <<: *app_base
    command: "bundle exec sidekiq -r ./config/environment.rb  -C config/sidekiq.yml"
    volumes:
      - .:/var/www/app
    ports: []      
    depends_on:
      - redis         
    env_file:
      - .env

  redis:
    image: redis
    environment: 
      REDIS_HOST: redis
      REDIS_PORT: 6379      
    command: "redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes"
    volumes:
      - ./tmp/db:/var/lib/redis/data
    env_file:
      - .env

  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile    
    ports:
      - "80:80"
      - "443:443"

    volumes:
      - /tmp/nginx:/etc/nginx/conf.d
      - /tmp/log/nginx:/var/log/nginx        
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /tmp/certs:/etc/nginx/certs         
    restart: always
    env_file:
      - .env
    


  # volumes:
  #   db-data:
  #   redis-data:
  #   nginx-data:
