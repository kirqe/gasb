apiVersion: batch/v1
kind: Job
metadata:
  name: install-migrate-job
  labels:
    app: {{ .Values.app.name }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  ttlSecondsAfterFinished: 0
  completions: 1
  template:
    metadata:
      name: install-migrate-job
      labels:
        app: {{ .Values.app.name }}
      annotations:
        timestamp: "{{ date "20060102150405" .Release.Time }}"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-status: "update"
        vault.hashicorp.com/agent-pre-populate: "true"
        vault.hashicorp.com/agent-inject-secret-app: "{{ .Values.vault.path }}"        
        vault.hashicorp.com/agent-inject-template-app: |
          {{`{{- with secret`}} "{{ .Values.vault.path }}" {{`-}}`}}
          {{`{{ range $Key, $Value := .Data.data }}export {{$Key}}="{{$Value}}"`}}
          {{`{{ end }}`}}
          {{`{{- end -}}`}}
        vault.hashicorp.com/role: {{ .Values.vault.role }}          
    spec:
      initContainers:
        - name: check-db-ready
          image: postgres
          command: ['sh', '-c', 'until pg_isready -h postgres -p 5432; 
          do echo waiting for database; sleep 2; done;']               
      containers:
      - name: {{ .Values.app.name }}
        image: {{ .Values.app.container.image }}
        imagePullPolicy: Never
        command: ["/bin/bash", "-c"]
        args: ["source /vault/secrets/* && bundle exec rake db:create db:migrate db:seed"]
        envFrom: 
          - configMapRef:
              name: {{ .Values.app.config.name }}
          - secretRef:
              name: {{ .Values.app.secret.name }}
      restartPolicy: Never
