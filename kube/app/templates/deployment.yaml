apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
  labels:
    app: {{ .Values.app.name }}
    group: {{ .Values.app.group }}     
spec:
  replicas: {{ .Values.app.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  strategy:
    type: {{ .Values.app.strategy.type }}      
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}
        group: {{ .Values.app.group }}
      annotations:
        timestamp: "{{ date "20060102150405" .Release.Time }}"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-status: "update"
        vault.hashicorp.com/agent-inject-secret-app: "{{ .Values.vault.path }}"        
        vault.hashicorp.com/agent-inject-template-app: |
          {{`{{- with secret`}} "{{ .Values.vault.path }}" {{`-}}`}}
          {{`{{ range $Key, $Value := .Data.data }}export {{$Key}}="{{$Value}}"`}}
          {{`{{ end }}`}}
          {{`{{- end -}}`}}
        vault.hashicorp.com/role: {{ .Values.vault.role }}    
    spec:
      serviceAccountName: app
      imagePullSecrets:
        {{- range .Values.app.imagePullSecrets}}
          - name: {{ .name }}
        {{- end }}
      terminationGracePeriodSeconds: {{ .Values.app.terminationGracePeriodSeconds }}
      volumes:
        {{- range .Values.app.volumes}}
        - name: {{ .name}}
          persistentVolumeClaim: 
            claimName: {{ .pvc.name }}  
        {{- end}}            
      containers:     
        - name: {{ .Values.app.name }}
          image: {{ .Values.app.container.image }}        
          command: ["/bin/bash", "-c"]
          args: ["source /vault/secrets/* && bundle exec puma -C config/puma.rb"]         
          imagePullPolicy: {{ .Values.app.container.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.app.container.port }}
          volumeMounts:
            {{- range .Values.app.volumes }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
            {{- end}}

            